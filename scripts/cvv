#!/usr/bin/perl
use strict;	   # insist that all variables be declared
use diagnostics;   # expand the cryptic warnings
undef $/;          # read one whole file in one scalar

MAIN:{
  
  if (scalar(@ARGV) < 3){
    print "Usage: $0 param val file(s)\n";
    exit(0);
  }

  my $param  = shift @ARGV; 
  my $val    = shift @ARGV;
  my @files  = @ARGV;

  foreach my $file (@files){

    open(FILE, "<$file");
    my $text = <FILE>;
    close(FILE);

    my $trail = "";
    if ($text =~ /^(.*?)(\s*)$/s){
      $text  = $1;
      $trail = $2;
    }
    $trail = "\n\n" if ($trail !~ /\n\s*\n/); # force empty line at the end of file
    
    my @lines   = split(/\n/, $text);
    my $success = 0;
    foreach my $line (@lines){
      next unless ($line =~ /^(\s*\#?\s*set\s+[^\s]*?$param[^\s]*?\s+)(.*?)$/i);
      $line = $1 . $val;
      $line =~ s/^\s*#\s*/ /g;
      $success = 1;
      print "$file: $line\n";
    }

    if (!$success){
      # Add a new line
      my $line = "set $param $val";
      @lines = ($line, @lines);
      print "$line\n";
    }
    
    $text = join("\n", @lines);
    open(FILE, ">$file");
    print FILE "$text$trail";
    close(FILE);

  }
  
}
