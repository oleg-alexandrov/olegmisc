(define-abbrev-table 'sh-mode-abbrev-table '(
    ))

(define-abbrev-table 'doctex-mode-abbrev-table '(
    ))

(define-abbrev-table 'javascript-mode-abbrev-table '(
    ))

(define-abbrev-table 'xrdb-mode-abbrev-table '(
    ))

(define-abbrev-table 'awk-mode-abbrev-table '(
    ("while" "while" c-electric-continued-statement 0)
    ("else" "else" c-electric-continued-statement 0)
    ))

(define-abbrev-table 'pike-mode-abbrev-table '(
    ("while" "while" c-electric-continued-statement 0)
    ("else" "else" c-electric-continued-statement 0)
    ))

(define-abbrev-table 'idl-mode-abbrev-table '(
    ))

(define-abbrev-table 'java-mode-abbrev-table '(
    ("finally" "finally" c-electric-continued-statement 0)
    ("catch" "catch" c-electric-continued-statement 0)
    ("while" "while" c-electric-continued-statement 0)
    ("else" "else" c-electric-continued-statement 0)
    ))

(define-abbrev-table 'objc-mode-abbrev-table '(
    ("while" "while" c-electric-continued-statement 0)
    ("else" "else" c-electric-continued-statement 0)
    ))

(define-abbrev-table 'winmgr-mode-abbrev-table '(
    ))

(define-abbrev-table 'matlab-shell-topic-mode-abbrev-table '(
    ))

(define-abbrev-table 'matlab-shell-help-mode-abbrev-table '(
    ))

(define-abbrev-table 'f90-mode-abbrev-table '(
    ("`di" "dimension" nil 0)
    ("`wh" "where" nil 0)
    ("`df" "define" nil 0)
    ("`de" "deallocate" nil 0)
    ("`fa" ".false." nil 0)
    ("`op" "optional" nil 0)
    ("`bd" "block data" nil 0)
    ("`mo" "module" nil 0)
    ("`se" "select" nil 0)
    ("`ba" "backspace" nil 0)
    ("`it" "intent" nil 0)
    ("`ey" "entry" nil 0)
    ("`ex" "external" nil 0)
    ("`cy" "cycle" nil 0)
    ("`cx" "complex" nil 0)
    ("`im" "implicit none" nil 0)
    ("`eq" "equivalence" nil 0)
    ("`rw" "rewind" nil 0)
    ("`as" "assignment" nil 0)
    ("`if" "interface" nil 0)
    ("`el" "else" nil 0)
    ("`cn" "contains" nil 0)
    ("`tr" ".true." nil 0)
    ("`cm" "common" nil 0)
    ("`rt" "return" nil 0)
    ("`cl" "close" nil 0)
    ("`pu" "public" nil 0)
    ("`al" "allocate" nil 0)
    ("`nu" "nullify" nil 0)
    ("`pr" "print" nil 0)
    ("`t" "type" nil 0)
    ("`po" "pointer" nil 0)
    ("`r" "real" nil 0)
    ("`elw" "elsewhere" nil 0)
    ("`pm" "program" nil 0)
    ("`ab" "allocatable" nil 0)
    ("`pi" "private" nil 0)
    ("`lo" "logical" nil 0)
    ("`ta" "target" nil 0)
    ("`rc" "recursive" nil 0)
    ("`fu" "function" nil 0)
    ("`dw" "do while" nil 0)
    ("`i" "integer" nil 0)
    ("`pa" "parameter" nil 0)
    ("`fo" "format" nil 0)
    ("`c" "character" nil 0)
    ("`wr" "write" nil 0)
    ("`eli" "else if" nil 0)
    ("`na" "namelist" nil 0)
    ("`fl" "forall" nil 0)
    ("`in " "include" nil 0)
    ("`su" "subroutine" nil 0)
    ("`sq" "sequence" nil 0)
    ))

(define-abbrev-table 'hm--html-mode-abbrev-table '(
    ("\\bct" "<center>" nil 1)
    (".." "&nbsp;" nil 7)
    ("\\prob" "<p /> <b>Problem .</b>" nil 2)
    (",," "<br>" nil 2)
    ("\\ect" "</center>" nil 5)
    ("wiht" "with " nil 1)
    ("pp" "<p /> " nil 33)
    ("taht" "that " nil 7)
    ("\\ct" "<center></center>" (lambda nil (interactive) (search-backward "</")) 7)
    ("incl" "<!--#include virtual=\"\"-->" nil 1)
    ("hh" "<hr />" nil 9)
    ("htat" "that " nil 2)
    ("\\s" "&nbsp;" nil 1)
    ("teh" "the " nil 2)
    ("bb" "<br />" nil 23)
    ("\\hr" "<hr />" nil 2)
    ))

(define-abbrev-table 'html-mode-abbrev-table '(
    ("\\bct" "<center>" nil 1)
    (".." "&nbsp;" nil 1)
    (",," "<br>" nil 2)
    ("\\ect" "</center>" nil 5)
    ("wiht" "with " nil 1)
    ("pp" "<p /> " nil 17)
    ("taht" "that " nil 7)
    ("hte" "the " nil 9)
    ("\\ct" "<center></center>" (lambda nil (interactive) (search-backward "</")) 7)
    ("hh" "<hr />" nil 7)
    ("htat" "that " nil 2)
    ("\\s" "&nbsp;" nil 1)
    ("teh" "the " nil 28)
    ("bb" "<br />" nil 19)
    ("\\hr" "<hr />" nil 2)
    ))

(define-abbrev-table 'matlab-mode-abbrev-table '(
    ("sgf" "saveas(gcf, '')" nil 13)
    ("aeo" "axis equal; axis off;" nil 1)
    ("if" "" matlab-if 55)
    (";p" "plot(" nil 0)
    ("chaa" "clf; hold on; axis equal; axis off" nil 10)
    ("sag" "saveas(gcf, '')" nil 2)
    ("cha" "clf; hold on; axis equal; axis off;" nil 5)
    ("\\dis" "disp(sprintf('%0.8g', ))" nil 6)
    (";d" "dlmread" nil 0)
    ("xxx" "break;" nil 3)
    ("for" "" matlab-for 94)
    ("dlr" "dlmread('');" nil 1)
    ("\\disp" "disp(sprintf('%d', ));" nil 1)
    (";dl" "dlmread" nil 0)
    ("\\ch" "clf; hold on; axis equal; axis off;" nil 0)
    ("teh" "the " nil 10)
    ("dsr" "display(sprintf('%0.9g'))" nil 1)
    ("fch" "figure(1); clf; hold on;" nil 0)
    ("dsp" "disp(sprintf('%0.9g'))" (lambda nil (backward-char 3)) 21)
    ("\\fig" "figure()" backward-char 11)
    ("cho" "clf; hold on;" nil 1)
    ("dsi" "display(sprintf('%d'))" nil 1)
    ))

(define-abbrev-table 'fortran-mode-abbrev-table '(
    ))

(define-abbrev-table 'c-mode-abbrev-table '(
    ("while" "while" c-electric-continued-statement 0)
    ("else" "else" c-electric-continued-statement 0)
    ))

(define-abbrev-table 'cperl-mode-abbrev-table '(
    (";u" "undef $/;" nil 0)
    ("print" "" perl-print 437)
    ("if" "" perl-if 270)
    ("foreach" "" perl-foreach 151)
    ("\\ud" "undef $/; # undefines the separator. Can read one whole file in one scalar." nil 10)
    ("xxx" "exit(0);" nil 114)
    ("for" "" perl-for 92)
    ("\\of" "open (FILE, \":utf8\", \"\");" (lambda nil (interactive) (backward-char 3)) 52)
    ("opf" "open (FILE, \":utf8\", \"\");" (lambda nil (interactive) (backward-char 3)) 1)
    ("else" "" perl-else 106)
    ("\\ar" "$ARGV[];" (lambda nil (interactive) (forward-char -2)) 1)
    ("\\ofw" "open(FILE, \">\");" nil 12)
    ("ssg" "" tilde-subst-globally 41)
    ("\\ofr" "open(FILE, \"<\");" nil 8)
    ("\\cf" "close(FILE);
" cperl-indent-command 64)
    ("\\ag" "$ARGV[];" (lambda nil (interactive) (forward-char -2)) 1)
    ("\\m" "=~ //" (lambda nil (interacive) (backward-char 1)) 0)
    ("sg" "" subst-globally 231)
    ("\\pf" "print FILE \"\\n\";" (lambda nil (interactive) (forward-char -4)) 35)
    ("\\f" "<FILE>" nil 4)
    (";x" "exit(0);" nil 0)
    ))

(define-abbrev-table 'c++-mode-abbrev-table '(
    ("ndd" "new double []" backward-char 25)
    ("if" "" c++-if 92)
    (",." " << endl;" nil 75)
    (",," " << ' ' << " nil 71)
    ("cout" "cout << " nil 99)
    ("cd" "complex<double>" nil 3)
    ("xxx" "exit(0);" indent-for-tab-command 43)
    ("nii" "new int []" backward-char 4)
    ("for" "" c++-for 130)
    ("doss" "double ** " nil 4)
    ("catch" "catch" c-electric-continued-statement 0)
    ("while" "while" c-electric-continued-statement 0)
    ("cin" "cin >> " nil 4)
    ("\\ijk" "[i][j][k]" nil 0)
    ("\\inc" "#include<>" backward-char 3)
    ("ints" "int*" nil 2)
    ("uns" "using namespace std;" nil 7)
    ("xx0" "exit(0);" nil 1)
    ("do" "double " nil 203)
    ("else" "else" c-electric-continued-statement 16)
    ("teh" "the " nil 8)
    ("dos" "double* " nil 106)
    ("\\inclu" "#include<>" backward-char 4)
    ("\\incl" "#include \"\"" backward-char 10)
    ("sparce" "sparse" nil 1)
    (";x" "exit(0);" nil 5)
    ("couts" "cout << \"\" << endl;" (lambda nil (interactive) (search-backward "\"")) 108)
    ))

(define-abbrev-table 'mutt-mode-abbrev-table '(
    ("hi youngae" "Hi Love" nil 4)
    ("tt" "Thank you,

Oleg
" nil 44)
    ("ts" "Thanks,

Oleg
" nil 48)
    ("riguros" "rigoros" nil 0)
    ("gg" "Good luck,

Oleg
" nil 4)
    ("hi vgutu" "Buna ziua" nil 1)
    ("\\sig" "
--- 
Oleg Alexandrov, CAM postdoc      Office: MS 7354
UCLA, Department of Mathematics   Phone:  +1-310-825-4746
520 Portola Plaza                 E-mail: aoleg@math.ucla.edu
Math Sciences 6363                www.math.ucla.edu/~aoleg
Los Angeles, CA 90095
" nil 17)
    ("wiht" "with " nil 0)
    ("hi igor" "Salut Igor" nil 4)
    ("hi ion" "Salut Ion" nil 2)
    ("taht" "that " nil 10)
    ("param" "parametrization " nil 0)
    ("cc" "Cheers,

Oleg
" nil 138)
    ("hte" "the " nil 6)
    ("hi tar" "Hi Dani" nil 0)
    ("aa" "All the best,

Oleg
" nil 21)
    ("hi youngae," "Hi love," nil 4)
    ("htis" "this " nil 0)
    ("hi valeriu" "Buna ziua" nil 10)
    ("hh" "Have fun,

Oleg
" nil 1)
    ("ss" "Sincerely yours,

Oleg
" nil 1)
    ("hi stanley" "Hi" nil 2)
    ("cpr" "Cu prietenie,
Oleg" nil 10)
    ("oo" "Oleg" nil 101)
    ("analytical" "analytic " nil 0)
    ("existance" "existence" nil 2)
    ("continous" "continuous " nil 0)
    ("\\cpr" "Cu prietenie,
Oleg" nil 0)
    ("hi fadil" "Hi" nil 13)
    ("ily" "I love you!" nil 20)
    ("kk" "Keep in touch,

Oleg
" nil 13)
    ))

(define-abbrev-table 'sgml-mode-abbrev-table '(
    ))

(define-abbrev-table 'xml-mode-abbrev-table '(
    ))

(define-abbrev-table 'makefile-mode-abbrev-table '(
    ))

(define-abbrev-table 'text-mode-abbrev-table '(
    ("\\bct" "\\begin{center}" nil 4)
    ("\\h1" "H^{(1)}_m" nil 6)
    ("\\hl" "\\\\ \\hline " newline 19)
    ("\\beq" "\\begin{eqnarray}" nil 4)
    ("\\a" "\\alpha" nil 126)
    ("contr" "contradiction" nil 0)
    ("\\bvt" "\\begin{verbatim}" nil 4)
    ("\\eml" "\\end{multline}" nil 3)
    ("\\bt" "\\begin{tabular}" nil 1)
    ("\\na" "\\nabla" nil 4)
    ("\\bs" "\\begin{subequations}" nil 13)
    ("\\hi" "\\phi" nil 155)
    ("cyl" "cylindrical" nil 0)
    ("\\ben" "\\begin{enumerate}" nil 2)
    ("\\fl" "\\foilhead{}" (lambda nil (interactive) (backward-char 1)) 8)
    ("\\br" "\\begin{reference}" nil 1)
    ("behaviour" "behavior " nil 15)
    ("thm" "theorem " nil 2)
    ("\\st" "\\stackrel{\\to}{}" backward-char 32)
    ("\\bp" "" latex-bigg-par 7)
    ("\\bco" "\\begin{corollary}" nil 1)
    ("\\ss" "\\subsection{}" backward-char 4)
    ("\\transpose" "^\\mathsf{T}" nil 0)
    ("\\ees" "\\end{equation*}" nil 6)
    ("\\prob" "\\medskip\\noindent{\\bf Problem .}" (lambda nil (interactive) (backward-char 2)) 18)
    ("\\up" "\\usepackage{}" backward-char 6)
    ("\\abb" "(\"\" \"\" (lambda () (interactive)) 0)" (lambda nil (interactive) (beginning-of-line) (search-forward "\"")) 9)
    ("riguros" "rigoros" nil 1)
    ("\\fh" "\\foilhead{}" backward-char 7)
    ("\\prr" "\\medskip\\noindent{\\bf Proof.} " nil 1)
    ("\\ect" "\\end{center}" nil 6)
    ("\\sq" "\\sqrt{}" backward-char 111)
    ("\\eeq" "\\end{eqnarray}" nil 5)
    ("\\bm" "\\begin{multline*}" nil 4)
    ("\\di" "\\displaystyle" nil 3)
    ("\\evt" "\\end{verbatim}" nil 4)
    ("\\sp" "" (lambda nil (interactive) (insert "\\begin{split}
  
\\end{split}") (previous-line 1)) 10)
    ("\\bib" "\\bibitem{}" backward-char 6)
    ("\\bl" "\\begin{list}{}" backward-char 2)
    ("coeff" "coefficient " nil 1)
    ("\\itm" "" latex-itemize 9)
    ("disp" "displaystyle" nil 14)
    ("wiht" "with " nil 3)
    ("\\bal" "\\begin{align}" nil 3)
    ("\\een" "\\end{enumerate}" nil 1)
    ("\\sm" "\\smallskip" nil 3)
    ("\\bi" "\\begin{itemize}" nil 9)
    ("ack" "acknowledgments" nil 0)
    ("defence" "defense " nil 3)
    ("\\sl" "" latex-sum-lim 22)
    ("\\bh" "\\begin{huge}" nil 1)
    ("\\eco" "\\end{corollary}" nil 1)
    ("\\dd" "\\Delta" nil 1)
    ("\\bg" "" latex-bigg 11)
    ("\\bea" "\\begin{eqnarray}" nil 1)
    ("\\bth" "\\begin{theorem}" nil 2)
    ("\\be" "\\begin{equation}\\label{}" backward-char 89)
    ("lhs" "left-hand side " nil 0)
    ("taht" "that " nil 52)
    ("param" "parametrization " nil 0)
    ("\\baf" "Burden and Faires" nil 10)
    ("\\bpm" "\\begin{pmatrix}" nil 1)
    ("\\bls" "\\begin{list}{}{}" (lambda nil (interactive) (backward-char 3)) 11)
    ("\\bd" "\\begin{definition}" nil 3)
    ("coeffs" "coefficients " nil 1)
    ("oth" "on the other hand" nil 1)
    ("\\om" "\\Omega" nil 19)
    ("\\lrp" "\\left(\\right)" (lambda nil (interactive) (search-backward "\\")) 2)
    ("\\bc" "\\begin{center}" nil 22)
    ("\\transp" "^\\mathsf{T}" nil 0)
    ("\\eal" "\\end{align}" nil 3)
    ("\\bb" "{\\bf }" backward-char 143)
    ("props" "properties " nil 0)
    ("\\bca" "\\begin{cases}" nil 3)
    ("\\sec" "\\section{}" backward-char 10)
    ("\\ba" "\\begin{array}{}" backward-char 16)
    ("\\mn" "\\medskip\\noindent " nil 105)
    ("polyn" "polynomial " nil 1)
    ("indep" "independent " nil 0)
    ("\\bab" "\\begin{abstract}" nil 3)
    ("hte" "the " nil 28)
    ("\\blm" "\\begin{lemma}" nil 2)
    ("\\ker" "\\mbox{Ker}\\," nil 0)
    ("\\eea" "\\end{eqnarray}" nil 1)
    ("\\eth" "\\end{theorem}" nil 1)
    ("\\ev" "\\end{verbatim}" nil 11)
    ("responce" "response " nil 1)
    ("\\epm" "\\end{pmatrix}" nil 7)
    ("\\els" "\\end{list}" nil 9)
    ("\\mi" "\\medskip\\noindent" nil 1)
    ("cin" "cinnps" nil 95)
    ("oyu" "you " nil 2)
    ("\\et" "\\end{tabular}" nil 1)
    ("\\cor" "" latex-corollary 11)
    ("funs" "functions " nil 0)
    ("\\im" "\\mathfrak{Im}" nil 4)
    ("\\es" "\\end{subequations}" nil 4)
    ("\\eca" "\\end{cases}" nil 3)
    ("\\bfr" "\\begin{flushright}" nil 1)
    ("\\rem" "\\medskip\\noindent{\\bf Remark.} " nil 1)
    ("\\vec" "" latex-vector 35)
    ("\\mf" "{\\mathbf }" backward-char 26)
    ("\\il" "" latex-int-lim 79)
    ("\\lab" "\\label{}" backward-char 16)
    ("\\dist" "\\mbox{dist}" nil 3)
    ("\\ct" "" latex-center 26)
    ("\\inc" "\\includegraphics[width=0.8\\textwidth]{}" backward-char 3)
    ("\\eab" "\\end{abstract}" nil 2)
    ("\\eq" "" latex-equation 78)
    ("htis" "this " nil 3)
    ("prop" "property " nil 0)
    ("\\vt" "\\vartheta" nil 16)
    ("\\eaa" "\\end{eqnarray}" nil 0)
    ("\\md" "\\medskip" nil 40)
    ("\\ep" "\\end{proof}" nil 3)
    ("\\cs" "" latex-cases 38)
    ("neib" "neighborhood " nil 14)
    ("\\elm" "\\end{lemma}" nil 3)
    ("\\mc" "\\mathcal{}" backward-char 2)
    ("\\ii" "" latex-int 19)
    ("\\ans" "\\medskip\\noindent{\\bf Answer.} 
" nil 6)
    ("\\mb" "\\mbox{  }" (lambda nil (interactive) (backward-char 2)) 111)
    ("\\en" "" latex-enumerate 10)
    ("rhs" "right-hand side " nil 0)
    ("enviroment" "environment" nil 0)
    ("\\sli" "" latex-slide 15)
    ("\\bdo" "\\begin{document}" nil 6)
    ("belive" "believe" nil 8)
    ("\\em" "\\end{multline*}" nil 6)
    ("approx" "approx " nil 13)
    ("\\tt" "\\tt " nil 10)
    ("\\bfl" "\\begin{flushleft}" nil 2)
    ("\\z" "\\mathbb Z" nil 19)
    ("\\vp" "\\varphi" nil 35)
    ("\\el" "\\end{list}" nil 3)
    ("\\mbf" "\\mathbf{}" backward-char 6)
    ("\\efr" "\\end{flushright}" nil 1)
    ("\\bfi" "\\begin{figure}" nil 0)
    ("\\ny" "\\nyice" nil 96)
    ("\\ei" "\\end{itemize}" nil 7)
    ("\\w" "\\wedge " nil 40)
    ("\\rr" "\\ref{}" backward-char 73)
    ("\\eh" "\\end{huge}" nil 1)
    ("\\bfg" "\\begin{figure}[h]\\label{}" backward-char 6)
    ("\\bsp" "\\begin{split}" nil 9)
    ("\\pt" "\\partial" nil 6)
    ("homogenous" "homogeneous " nil 1)
    ("\\tit" "\\begin{center}\\bf \\end{center}" (lambda nil (interactive) (beginning-of-line) (search-forward "bf ")) 2)
    ("\\ef" "\\end{figure}" nil 1)
    ("htat" "that " nil 4)
    ("\\ci" "" latex-cite 96)
    ("\\cim" "\\cimmps" nil 95)
    ("\\t" "\\theta" nil 56)
    ("\\toi" "\\to\\infty" nil 1)
    ("\\edo" "\\end{document}" nil 3)
    ("\\ee" "\\end{equation}" nil 69)
    ("\\pr" "" latex-proof 16)
    ("\\efl" "\\end{flushleft}" nil 2)
    ("\\s" "\\sigma" nil 2)
    ("\\ro" "\\rho" nil 5)
    ("\\sss" "\\subsubsection{}" backward-char 0)
    ("\\ed" "\\end{definition}" nil 1)
    ("rigoros" "rigorous " nil 0)
    ("\\r" "\\mathbb R" nil 81)
    ("\\r3" "\\mathbb R^3" nil 0)
    ("\\rn" "\\mathbb R^n" nil 3)
    ("\\bsl" "\\begin{slide}" nil 1)
    ("\\ec" "\\end{center}" nil 19)
    ("\\pp" "\\Phi" nil 4)
    ("teh" "the " nil 182)
    ("\\q" "\\mathbb Q" nil 2)
    ("\\r2" "\\mathbb R^2" nil 2)
    ("\\p" "\\partial " nil 84)
    ("\\ea" "\\end{array}" nil 15)
    ("\\th" "" latex-theorem 11)
    ("\\o" "\\omega" nil 32)
    ("\\ve" "\\varepsilon" nil 137)
    ("\\p2" "\\frac{\\pi}{2}" nil 12)
    ("\\ls" "" latex-list 18)
    ("\\efg" "\\end{figure}" nil 7)
    ("\\n" "\\noindent" nil 9)
    ("oo" "Oleg" nil 4)
    ("analytical" "analytic " nil 3)
    ("\\esp" "\\end{split}" nil 10)
    ("\\lr" "\\left(\\right)" (lambda nil (interactive) (search-backward "\\")) 9)
    ("\\eqs" "" (lambda nil (interactive) (insert "\\begin{equation*}
  
\\end{equation*}") (previous-line 1)) 1)
    ("\\grad" "\\nabla" nil 14)
    ("hwat" "what " nil 1)
    ("\\l" "\\lambda" nil 311)
    ("\\k" "\\kappa" nil 0)
    ("lin" "linearly " nil 0)
    ("\\trans" "^\\mathsf{T}" nil 3)
    ("\\bse" "\\begin{subequations}" nil 3)
    ("\\ab" "(\"\" \"\"  0)" (lambda nil (interactive) (beginning-of-line) (search-forward "\"")) 9)
    ("\\tc" "\\textcolor{}{}" (lambda nil (interactive) (backward-char 3)) 15)
    ("\\rf" "" latex-ref 419)
    ("\\esl" "\\end{slide}" nil 1)
    ("continous" "continuous " nil 2)
    ("\\i" "\\infty" nil 126)
    ("\\re" "\\mathfrak{Re}" nil 7)
    ("\\mat" "" latex-matrix 49)
    ("\\l2" " L^2(0,\\infty)" nil 1)
    ("\\lm" "" latex-lemma 15)
    ("\\dy" "\\Delta y" nil 1)
    ("\\bml" "\\begin{multline}" nil 3)
    ("\\ll" "\\lim\\limits_{}" backward-char 22)
    ("\\dx" "\\Delta x" nil 1)
    ("\\npi" "\\newpage\\item " nil 9)
    ("\\g" "\\gamma" nil 26)
    ("\\ni" "\\noindent " nil 46)
    ("\\off" "MS 7354" nil 1)
    ("\\incl" "\\includegraphics[clip, width=0.8\\textwidth]{}" backward-char 12)
    ("weired" "weird " nil 1)
    ("\\ft" "\\footnote{}" backward-char 1)
    ("\\e" "\\epsilon" nil 7)
    ("\\sol" "\\medskip\\noindent{\\bf Solution.} " nil 36)
    ("ily" "I love you!" nil 4)
    ("\\li" "Lipschitz" nil 6)
    ("\\sub" "\\subset " nil 15)
    ("\\d" "\\delta" nil 18)
    ("\\emp" "\\emph{}" backward-char 64)
    ("\\fr" "" latex-frac 333)
    ("\\dt" "\\Delta t" nil 2)
    ("\\bes" "\\begin{equation*}" nil 3)
    ("\\c" "\\mathbb C" nil 23)
    ("parameterization" "parametrization " nil 1)
    ("\\ne" "\\not=" nil 10)
    ("\\ese" "\\end{subequations}" nil 4)
    ("\\pa" "\\paragraph" nil 1)
    ("\\h2" "H^{(2)}_m" nil 4)
    ("\\ds" "\\displaystyle" nil 2)
    ("\\wt" "\\widetilde " nil 4)
    ("\\b" "\\beta" nil 19)
    ("\\bv" "\\begin{verbatim}" nil 12)
    ))

(define-abbrev-table 'lisp-mode-abbrev-table '(
    ("gg" "" global-set-abb 5)
    ("lc" "" local-set-abb 13)
    ("dd" "" lisp-function 15)
    ("\\ab" "(\"\" \"\"  0)" (lambda nil (interactive) (beginning-of-line) (search-forward "\"")) 0)
    ("\\li" "(lambda () (interacive) )" backward-char 1)
    ))

(define-abbrev-table 'temp-buffer-mode-abbrev-table '(
    ))

(define-abbrev-table 'help-mode-abbrev-table '(
    ))

(define-abbrev-table 'completion-list-mode-abbrev-table '(
    ))

(define-abbrev-table 'fundamental-mode-abbrev-table '(
    ))

(define-abbrev-table 'global-abbrev-table '(
    ))

