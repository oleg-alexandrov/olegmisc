{
	// Place your workspace snippets here. Each snippet is defined under a
	// snippet name and has a scope, prefix, body and description. Add comma
	// separated ids of the languages where the snippet is applicable in the
	// scope field. If scope is left empty or omitted, the snippet gets applied
	// to all languages. The prefix is what is used to trigger the snippet and
	// the body will be expanded and inserted. Possible variables are: $1, $2
	// for tab stops, $0 for the final cursor position, and ${1:label},
	// ${2:another} for placeholders. Placeholders with the same ids are
	// connected.

	// C++
    "br": {
		"scope": "cpp",
        "prefix": "br",
        "body": [
            "",
            "  << \"$1"
        ],
        "description": ""
    },  
    "cpp-xx": {
		"scope": "cpp",
        "prefix": "xx",
        "body": [
            "exit(0);",
        ],
        "description": ""
    },  
    "cpp-xxx": {
		"scope": "cpp",
        "prefix": "xxx",
        "body": [
            "exit(0);",
        ],
        "description": ""
    },  
    "cpp-x1": {
		"scope": "cpp",
        "prefix": "x1",
        "body": [
            "exit(1);",
        ],
        "description": ""
    },  
    "cpp-v2": {
		"scope": "cpp",
        "prefix": "v2",
        "body": [
            "vw::Vector2 $1",
        ],
        "description": ""
    },  
    "cpp-v3": {
		"scope": "cpp",
        "prefix": "v3",
        "body": [
            "vw::Vector3 $1",
        ],
        "description": ""
    },  
    "m3": {
		"scope": "cpp",
        "prefix": "m3",
        "body": [
            "vw::Matrix3x3 $1",
        ],
        "description": ""
    },  
    "vs": {
		"scope": "cpp",
        "prefix": "vs",
        "body": [
            "std::vector<std::string> $1;",
        ],
        "description": ""
    },  
    "vi": {
		"scope": "cpp",
        "prefix": "vi",
        "body": [
            "std::vector<int> $1;",
        ],
        "description": ""
    },  
    "vd": {
		"scope": "cpp",
        "prefix": "vd",
        "body": [
            "std::vector<double> $1;",
        ],
        "description": ""
    },  
    "do": {
		"scope": "cpp",
        "prefix": "do",
        "body": [
            "double $1;",
        ],
        "description": ""
    },  
    "db": {
		"scope": "cpp",
        "prefix": "db",
        "body": [
            "double $1;",
        ],
        "description": ""
    },  
    "ss": {
		"scope": "cpp",
        "prefix": "ss",
        "body": [
            "size_t $1;",
        ],
        "description": ""
    },  
    "si": {
		"scope": "cpp",
        "prefix": "si",
        "body": [
            ".size()$1",
        ],
        "description": ""
    },  
    "For loop": {
		"scope": "cpp",
        "prefix": "fo",
        "body": [
            "for ($1 $2 = $3; $2 < $4; $2++) {",
            "}"
        ],
        "description": ""
    },  
    "iff": {
		"scope": "cpp",
        "prefix": "iff",
        "body": [
            "if ($1) {",
            "  $2",
            "}"
        ],
        "description": ""
    },  
    "vvw": {
		"scope": "cpp",
        "prefix": "vvw",
        "body": [
            "vw::vw_out() << \"$1\" << \"\\n\";",
        ],
        "description": ""
    },  
    "cout str": {
		"scope": "cpp",
        "prefix": "cs",
        "body": [
            "std::cout << \"$1\\n\";"
        ],
        "description": ""
    },
    "co": {
		"scope": "cpp",
        "prefix": "co",
        "body": [
            "std::cout << \""
        ],
        "description": ""
    },
    "cob": {
		"scope": "cpp",
        "prefix": "cob",
        "body": [
            "std::cout << \""
        ],
        "description": ""
    },
    "cou": {
		"scope": "cpp",
        "prefix": "cou",
        "body": [
            "std::cout << \"$1\" << $2 << \"\\n\";"
        ],
        "description": ""
    },
    "cous": {
		"scope": "cpp",
        "prefix": "cous",
        "body": [
            "std::cout << \"$1\\n\";"
        ],
        "description": ""
    },
    "cout": {
		"scope": "cpp",
        "prefix": "czzz",
        "body": [
            "std::cout << \"$1\" << $2 << \"\\n\";"
        ],
        "description": ""
    },
    "str": {
		"scope": "cpp",
        "prefix": "str",
        "body": [
            "std::string $1 "
        ],
        "description": ""
    },
    "coup": {
		"scope": "cpp",
        "prefix": "coup",
        "body": [
            "std::cout.precision($1);$2"
        ],
        "description": ""
    },
    "co7": {
		"scope": "cpp", 
        "prefix": "co7", 
        "body": [
            "std::cout.precision(17);$2"
        ],
        "description": ""
    },
    "cpp-tdd": {
		"scope": "cpp", 
        "prefix": "tdd", 
        "body": [
            "// TODO(oalexan1): $1"
        ],
        "description": ""
    },
    "cpp-td": {
		"scope": "cpp", 
        "prefix": "td", 
        "body": [
            "// TODO(oalexan1): $1"
        ],
        "description": ""
    },
    "sep": {
		"scope": "cpp",
        "prefix": "sep",
        "body": [
            "<< \" \" << "
        ],
        "description": ""
    },

	// ReStructuredText
    "numref": {
		"scope": "restructuredtext",
        "prefix": "nr",
        "body": [
            ":numref:`$1`"
        ],
        "description": "numref"
    },
    "section": {
		"scope": "restructuredtext",
        "prefix": "sec",
        "body": [
            ".. _$1:"
        ],
        "description": "section"
    },
    "url": {
		"scope": "restructuredtext",
        "prefix": "ur",
        "body": [
            "`$1 <>`_"
        ],
        "description": "url"
    },

    "xxx": {
		"scope": "python",
        "prefix": "xxx",
        "body": [
            "sys.exit(0)"
        ],
        "description": ""
    },
    "xx0": {
		"scope": "python",
        "prefix": "xx0",
        "body": [
            "sys.exit(0)"
        ],
        "description": ""
    },

    "python-td": {
		"scope": "python",
        "prefix": "td",
        "body": [
            "# TODO(oalexan1): "
        ],
        "description": ""
    },

    "xx": {
		"scope": "shellscript",
        "prefix": "xx",
        "body": [
            "exit 0"
        ],
        "description": ""
    },
    "shell-td": {
		"scope": "shellscript",
        "prefix": "td",
        "body": [
            "# TODO(oalexan1): "
        ],
        "description": ""
    },
    "x0": {
		"scope": "shellscript",
        "prefix": "x0",
        "body": [
            "exit 0"
        ],
        "description": ""
    },
    "x1":{
        "scope": "shellscript",
        "prefix": "x1",
        "body": [
            "exit 1"
        ],
        "description": ""
    },
}
